#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DbConfig
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.ProviderAttribute(typeof(Sqlite))]
	public partial class NtEcConFigs : DbLinq.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertFrame(Frame instance);
    partial void UpdateFrame(Frame instance);
    partial void DeleteFrame(Frame instance);
    partial void InsertFrontOffice(FrontOffice instance);
    partial void UpdateFrontOffice(FrontOffice instance);
    partial void DeleteFrontOffice(FrontOffice instance);
    partial void InsertMasterPage(MasterPage instance);
    partial void UpdateMasterPage(MasterPage instance);
    partial void DeleteMasterPage(MasterPage instance);
    partial void InsertOptions(Options instance);
    partial void UpdateOptions(Options instance);
    partial void DeleteOptions(Options instance);
    partial void InsertPage(Page instance);
    partial void UpdatePage(Page instance);
    partial void DeletePage(Page instance);
    partial void InsertPageUsers(PageUsers instance);
    partial void UpdatePageUsers(PageUsers instance);
    partial void DeletePageUsers(PageUsers instance);
    partial void InsertUsers(Users instance);
    partial void UpdateUsers(Users instance);
    partial void DeleteUsers(Users instance);
    #endregion
		
		public NtEcConFigs(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public NtEcConFigs(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public NtEcConFigs(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public NtEcConFigs(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Frame> Frame
		{
			get
			{
				return this.GetTable<Frame>();
			}
		}
		
		public System.Data.Linq.Table<FrontOffice> FrontOffice
		{
			get
			{
				return this.GetTable<FrontOffice>();
			}
		}
		
		public System.Data.Linq.Table<MasterPage> MasterPage
		{
			get
			{
				return this.GetTable<MasterPage>();
			}
		}
		
		public System.Data.Linq.Table<Options> Options
		{
			get
			{
				return this.GetTable<Options>();
			}
		}
		
		public System.Data.Linq.Table<Page> Page
		{
			get
			{
				return this.GetTable<Page>();
			}
		}
		
		public System.Data.Linq.Table<PageUsers> PageUsers
		{
			get
			{
				return this.GetTable<PageUsers>();
			}
		}
		
		public System.Data.Linq.Table<Users> Users
		{
			get
			{
				return this.GetTable<Users>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="main.frame")]
	public partial class Frame : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _frameType;
		
		private int _height;
		
		private int _id;
		
		private int _idpAge;
		
		private int _isActive;
		
		private string _lastUpd;
		
		private string _options;
		
		private System.Nullable<int> _scheduleInterval;
		
		private string _scroll;
		
		private string _title;
		
		private int _width;
		
		private int _x;
		
		private int _y;
		
		private EntityRef<Page> _page;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFrameTypeChanging(string value);
    partial void OnFrameTypeChanged();
    partial void OnHeightChanging(int value);
    partial void OnHeightChanged();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnIDPageChanging(int value);
    partial void OnIDPageChanged();
    partial void OnIsActiveChanging(int value);
    partial void OnIsActiveChanged();
    partial void OnLastUpdChanging(string value);
    partial void OnLastUpdChanged();
    partial void OnOptionsChanging(string value);
    partial void OnOptionsChanged();
    partial void OnScheduleIntervalChanging(System.Nullable<int> value);
    partial void OnScheduleIntervalChanged();
    partial void OnScrollChanging(string value);
    partial void OnScrollChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnWidthChanging(int value);
    partial void OnWidthChanged();
    partial void OnXChanging(int value);
    partial void OnXChanged();
    partial void OnYChanging(int value);
    partial void OnYChanged();
    #endregion
		
		public Frame()
		{
			this._page = default(EntityRef<Page>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="frame_type", Storage="_frameType", DbType="VARCHAR(100)", CanBeNull=false)]
		public string FrameType
		{
			get
			{
				return this._frameType;
			}
			set
			{
				if ((this._frameType != value))
				{
					this.OnFrameTypeChanging(value);
					this.SendPropertyChanging();
					this._frameType = value;
					this.SendPropertyChanged("FrameType");
					this.OnFrameTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="height", Storage="_height", DbType="INT")]
		public int Height
		{
			get
			{
				return this._height;
			}
			set
			{
				if ((this._height != value))
				{
					this.OnHeightChanging(value);
					this.SendPropertyChanging();
					this._height = value;
					this.SendPropertyChanged("Height");
					this.OnHeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="id", Storage="_id", AutoSync=AutoSync.OnInsert, DbType="INT", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="id_page", Storage="_idpAge", DbType="INT")]
		public int IDPage
		{
			get
			{
				return this._idpAge;
			}
			set
			{
				if ((this._idpAge != value))
				{
					this.OnIDPageChanging(value);
					this.SendPropertyChanging();
					this._idpAge = value;
					this.SendPropertyChanged("IDPage");
					this.OnIDPageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="is_active", Storage="_isActive", DbType="INT")]
		public int IsActive
		{
			get
			{
				return this._isActive;
			}
			set
			{
				if ((this._isActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._isActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="lastupd", Storage="_lastUpd", DbType="VARCHAR(20)")]
		public string LastUpd
		{
			get
			{
				return this._lastUpd;
			}
			set
			{
				if ((this._lastUpd != value))
				{
					this.OnLastUpdChanging(value);
					this.SendPropertyChanging();
					this._lastUpd = value;
					this.SendPropertyChanged("LastUpd");
					this.OnLastUpdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="options", Storage="_options", DbType="TEXT")]
		public string Options
		{
			get
			{
				return this._options;
			}
			set
			{
				if ((this._options != value))
				{
					this.OnOptionsChanging(value);
					this.SendPropertyChanging();
					this._options = value;
					this.SendPropertyChanged("Options");
					this.OnOptionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="schedule_interval", Storage="_scheduleInterval", DbType="INT")]
		public System.Nullable<int> ScheduleInterval
		{
			get
			{
				return this._scheduleInterval;
			}
			set
			{
				if ((this._scheduleInterval != value))
				{
					this.OnScheduleIntervalChanging(value);
					this.SendPropertyChanging();
					this._scheduleInterval = value;
					this.SendPropertyChanged("ScheduleInterval");
					this.OnScheduleIntervalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="scroll", Storage="_scroll", DbType="VARCHAR(15)")]
		public string Scroll
		{
			get
			{
				return this._scroll;
			}
			set
			{
				if ((this._scroll != value))
				{
					this.OnScrollChanging(value);
					this.SendPropertyChanging();
					this._scroll = value;
					this.SendPropertyChanged("Scroll");
					this.OnScrollChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="title", Storage="_title", DbType="VARCHAR(255)")]
		public string Title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="width", Storage="_width", DbType="INT")]
		public int Width
		{
			get
			{
				return this._width;
			}
			set
			{
				if ((this._width != value))
				{
					this.OnWidthChanging(value);
					this.SendPropertyChanging();
					this._width = value;
					this.SendPropertyChanged("Width");
					this.OnWidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="x", Storage="_x", DbType="INT")]
		public int X
		{
			get
			{
				return this._x;
			}
			set
			{
				if ((this._x != value))
				{
					this.OnXChanging(value);
					this.SendPropertyChanging();
					this._x = value;
					this.SendPropertyChanged("X");
					this.OnXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="y", Storage="_y", DbType="INT")]
		public int Y
		{
			get
			{
				return this._y;
			}
			set
			{
				if ((this._y != value))
				{
					this.OnYChanging(value);
					this.SendPropertyChanging();
					this._y = value;
					this.SendPropertyChanged("Y");
					this.OnYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Page_Frame", Storage="_page", ThisKey="IDPage", OtherKey="ID", IsForeignKey=true)]
		public Page Page
		{
			get
			{
				return this._page.Entity;
			}
			set
			{
				Page previousValue = this._page.Entity;
				if (((previousValue != value) 
							|| (this._page.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._page.Entity = null;
						previousValue.Frame.Remove(this);
					}
					this._page.Entity = value;
					if ((value != null))
					{
						value.Frame.Add(this);
						this._idpAge = value.ID;
					}
					else
					{
						this._idpAge = default(int);
					}
					this.SendPropertyChanged("Page");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="main.frontoffice")]
	public partial class FrontOffice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<int> _id;
		
		private string _lastUpd;
		
		private string _options;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Nullable<int> value);
    partial void OnIDChanged();
    partial void OnLastUpdChanging(string value);
    partial void OnLastUpdChanged();
    partial void OnOptionsChanging(string value);
    partial void OnOptionsChanged();
    #endregion
		
		public FrontOffice()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="id", Storage="_id", AutoSync=AutoSync.OnInsert, DbType="INT", IsPrimaryKey=true, IsDbGenerated=true)]
		public System.Nullable<int> ID
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="lastupd", Storage="_lastUpd", DbType="VARCHAR(20)")]
		public string LastUpd
		{
			get
			{
				return this._lastUpd;
			}
			set
			{
				if ((this._lastUpd != value))
				{
					this.OnLastUpdChanging(value);
					this.SendPropertyChanging();
					this._lastUpd = value;
					this.SendPropertyChanged("LastUpd");
					this.OnLastUpdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="options", Storage="_options", DbType="TEXT")]
		public string Options
		{
			get
			{
				return this._options;
			}
			set
			{
				if ((this._options != value))
				{
					this.OnOptionsChanging(value);
					this.SendPropertyChanging();
					this._options = value;
					this.SendPropertyChanged("Options");
					this.OnOptionsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="main.master_page")]
	public partial class MasterPage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _description;
		
		private int _id;
		
		private string _options;
		
		private string _title;
		
		private EntitySet<Page> _page;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnOptionsChanging(string value);
    partial void OnOptionsChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    #endregion
		
		public MasterPage()
		{
			this._page = new EntitySet<Page>(new Action<Page>(this.attach_page), new Action<Page>(this.detach_page));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="description", Storage="_description", DbType="TEXT")]
		public string Description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="id", Storage="_id", AutoSync=AutoSync.OnInsert, DbType="INT", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="options", Storage="_options", DbType="TEXT")]
		public string Options
		{
			get
			{
				return this._options;
			}
			set
			{
				if ((this._options != value))
				{
					this.OnOptionsChanging(value);
					this.SendPropertyChanging();
					this._options = value;
					this.SendPropertyChanged("Options");
					this.OnOptionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="title", Storage="_title", DbType="VARCHAR(255)")]
		public string Title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MasterPage_Page", Storage="_page", ThisKey="ID", OtherKey="IDMasterPage")]
		public EntitySet<Page> Page
		{
			get
			{
				return this._page;
			}
			set
			{
				this._page.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_page(Page entity)
		{
			this.SendPropertyChanging();
			entity.MasterPage = this;
		}
		
		private void detach_page(Page entity)
		{
			this.SendPropertyChanging();
			entity.MasterPage = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="main.options")]
	public partial class Options : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _lastUpd;
		
		private string _name;
		
		private string _objtYpe;
		
		private string _options1;
		
		private string _url;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnLastUpdChanging(string value);
    partial void OnLastUpdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnOBJTypeChanging(string value);
    partial void OnOBJTypeChanged();
    partial void OnOptions1Changing(string value);
    partial void OnOptions1Changed();
    partial void OnURLChanging(string value);
    partial void OnURLChanged();
    #endregion
		
		public Options()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="id", Storage="_id", AutoSync=AutoSync.OnInsert, DbType="INT", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="lastupd", Storage="_lastUpd", DbType="VARCHAR(20)")]
		public string LastUpd
		{
			get
			{
				return this._lastUpd;
			}
			set
			{
				if ((this._lastUpd != value))
				{
					this.OnLastUpdChanging(value);
					this.SendPropertyChanging();
					this._lastUpd = value;
					this.SendPropertyChanged("LastUpd");
					this.OnLastUpdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="name", Storage="_name", DbType="NVARCHAR(255)", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="obj_type", Storage="_objtYpe", DbType="CHAR", CanBeNull=false)]
		public string OBJType
		{
			get
			{
				return this._objtYpe;
			}
			set
			{
				if ((this._objtYpe != value))
				{
					this.OnOBJTypeChanging(value);
					this.SendPropertyChanging();
					this._objtYpe = value;
					this.SendPropertyChanged("OBJType");
					this.OnOBJTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="options", Storage="_options1", DbType="TEXT")]
		public string Options1
		{
			get
			{
				return this._options1;
			}
			set
			{
				if ((this._options1 != value))
				{
					this.OnOptions1Changing(value);
					this.SendPropertyChanging();
					this._options1 = value;
					this.SendPropertyChanged("Options1");
					this.OnOptions1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="url", Storage="_url", DbType="NVARCHAR(255)")]
		public string URL
		{
			get
			{
				return this._url;
			}
			set
			{
				if ((this._url != value))
				{
					this.OnURLChanging(value);
					this.SendPropertyChanging();
					this._url = value;
					this.SendPropertyChanged("URL");
					this.OnURLChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="main.page")]
	public partial class Page : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _idmAsterPage;
		
		private string _name;
		
		private string _options;
		
		private string _title;
		
		private string _xmlfOlderPath;
		
		private string _xmlurl;
		
		private EntitySet<Frame> _frame;
		
		private EntitySet<PageUsers> _pageUsers;
		
		private EntityRef<MasterPage> _masterPage;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnIDMasterPageChanging(int value);
    partial void OnIDMasterPageChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnOptionsChanging(string value);
    partial void OnOptionsChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnXMLFolderPathChanging(string value);
    partial void OnXMLFolderPathChanged();
    partial void OnXMLURLChanging(string value);
    partial void OnXMLURLChanged();
    #endregion
		
		public Page()
		{
			this._frame = new EntitySet<Frame>(new Action<Frame>(this.attach_frame), new Action<Frame>(this.detach_frame));
			this._pageUsers = new EntitySet<PageUsers>(new Action<PageUsers>(this.attach_pageUsers), new Action<PageUsers>(this.detach_pageUsers));
			this._masterPage = default(EntityRef<MasterPage>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="id", Storage="_id", AutoSync=AutoSync.OnInsert, DbType="INT", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="id_master_page", Storage="_idmAsterPage", DbType="INT")]
		public int IDMasterPage
		{
			get
			{
				return this._idmAsterPage;
			}
			set
			{
				if ((this._idmAsterPage != value))
				{
					this.OnIDMasterPageChanging(value);
					this.SendPropertyChanging();
					this._idmAsterPage = value;
					this.SendPropertyChanged("IDMasterPage");
					this.OnIDMasterPageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="name", Storage="_name", DbType="VARCHAR(255)", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="options", Storage="_options", DbType="TEXT")]
		public string Options
		{
			get
			{
				return this._options;
			}
			set
			{
				if ((this._options != value))
				{
					this.OnOptionsChanging(value);
					this.SendPropertyChanging();
					this._options = value;
					this.SendPropertyChanged("Options");
					this.OnOptionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="title", Storage="_title", DbType="VARCHAR(255)")]
		public string Title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="xml_folder_path", Storage="_xmlfOlderPath", DbType="TEXT")]
		public string XMLFolderPath
		{
			get
			{
				return this._xmlfOlderPath;
			}
			set
			{
				if ((this._xmlfOlderPath != value))
				{
					this.OnXMLFolderPathChanging(value);
					this.SendPropertyChanging();
					this._xmlfOlderPath = value;
					this.SendPropertyChanged("XMLFolderPath");
					this.OnXMLFolderPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="xml_url", Storage="_xmlurl", DbType="TEXT")]
		public string XMLURL
		{
			get
			{
				return this._xmlurl;
			}
			set
			{
				if ((this._xmlurl != value))
				{
					this.OnXMLURLChanging(value);
					this.SendPropertyChanging();
					this._xmlurl = value;
					this.SendPropertyChanged("XMLURL");
					this.OnXMLURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Page_Frame", Storage="_frame", ThisKey="ID", OtherKey="IDPage")]
		public EntitySet<Frame> Frame
		{
			get
			{
				return this._frame;
			}
			set
			{
				this._frame.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Page_PageUsers", Storage="_pageUsers", ThisKey="ID", OtherKey="IDPage")]
		public EntitySet<PageUsers> PageUsers
		{
			get
			{
				return this._pageUsers;
			}
			set
			{
				this._pageUsers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MasterPage_Page", Storage="_masterPage", ThisKey="IDMasterPage", OtherKey="ID", IsForeignKey=true)]
		public MasterPage MasterPage
		{
			get
			{
				return this._masterPage.Entity;
			}
			set
			{
				MasterPage previousValue = this._masterPage.Entity;
				if (((previousValue != value) 
							|| (this._masterPage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._masterPage.Entity = null;
						previousValue.Page.Remove(this);
					}
					this._masterPage.Entity = value;
					if ((value != null))
					{
						value.Page.Add(this);
						this._idmAsterPage = value.ID;
					}
					else
					{
						this._idmAsterPage = default(int);
					}
					this.SendPropertyChanged("MasterPage");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_frame(Frame entity)
		{
			this.SendPropertyChanging();
			entity.Page = this;
		}
		
		private void detach_frame(Frame entity)
		{
			this.SendPropertyChanging();
			entity.Page = null;
		}
		
		private void attach_pageUsers(PageUsers entity)
		{
			this.SendPropertyChanging();
			entity.Page = this;
		}
		
		private void detach_pageUsers(PageUsers entity)
		{
			this.SendPropertyChanging();
			entity.Page = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="main.page_users")]
	public partial class PageUsers : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _idpAge;
		
		private int _iduSer;
		
		private string _lastUpd;
		
		private EntityRef<Page> _page;
		
		private EntityRef<Users> _users;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnIDPageChanging(int value);
    partial void OnIDPageChanged();
    partial void OnIDUserChanging(int value);
    partial void OnIDUserChanged();
    partial void OnLastUpdChanging(string value);
    partial void OnLastUpdChanged();
    #endregion
		
		public PageUsers()
		{
			this._page = default(EntityRef<Page>);
			this._users = default(EntityRef<Users>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="id", Storage="_id", AutoSync=AutoSync.OnInsert, DbType="INT", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="id_page", Storage="_idpAge", DbType="INT")]
		public int IDPage
		{
			get
			{
				return this._idpAge;
			}
			set
			{
				if ((this._idpAge != value))
				{
					this.OnIDPageChanging(value);
					this.SendPropertyChanging();
					this._idpAge = value;
					this.SendPropertyChanged("IDPage");
					this.OnIDPageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="id_user", Storage="_iduSer", DbType="INT")]
		public int IDUser
		{
			get
			{
				return this._iduSer;
			}
			set
			{
				if ((this._iduSer != value))
				{
					this.OnIDUserChanging(value);
					this.SendPropertyChanging();
					this._iduSer = value;
					this.SendPropertyChanged("IDUser");
					this.OnIDUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="lastupd", Storage="_lastUpd", DbType="VARCHAR(20)")]
		public string LastUpd
		{
			get
			{
				return this._lastUpd;
			}
			set
			{
				if ((this._lastUpd != value))
				{
					this.OnLastUpdChanging(value);
					this.SendPropertyChanging();
					this._lastUpd = value;
					this.SendPropertyChanged("LastUpd");
					this.OnLastUpdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Page_PageUsers", Storage="_page", ThisKey="IDPage", OtherKey="ID", IsForeignKey=true)]
		public Page Page
		{
			get
			{
				return this._page.Entity;
			}
			set
			{
				Page previousValue = this._page.Entity;
				if (((previousValue != value) 
							|| (this._page.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._page.Entity = null;
						previousValue.PageUsers.Remove(this);
					}
					this._page.Entity = value;
					if ((value != null))
					{
						value.PageUsers.Add(this);
						this._idpAge = value.ID;
					}
					else
					{
						this._idpAge = default(int);
					}
					this.SendPropertyChanged("Page");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Users_PageUsers", Storage="_users", ThisKey="IDUser", OtherKey="ID", IsForeignKey=true)]
		public Users Users
		{
			get
			{
				return this._users.Entity;
			}
			set
			{
				Users previousValue = this._users.Entity;
				if (((previousValue != value) 
							|| (this._users.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._users.Entity = null;
						previousValue.PageUsers.Remove(this);
					}
					this._users.Entity = value;
					if ((value != null))
					{
						value.PageUsers.Add(this);
						this._iduSer = value.ID;
					}
					else
					{
						this._iduSer = default(int);
					}
					this.SendPropertyChanged("Users");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="main.users")]
	public partial class Users : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<int> _adMiN;
		
		private string _adMiNOptions;
		
		private string _description;
		
		private int _id;
		
		private string _lastUpd;
		
		private string _name;
		
		private string _pass;
		
		private string _userOptions;
		
		private EntitySet<PageUsers> _pageUsers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAdMInChanging(System.Nullable<int> value);
    partial void OnAdMInChanged();
    partial void OnAdMInOptionsChanging(string value);
    partial void OnAdMInOptionsChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnLastUpdChanging(string value);
    partial void OnLastUpdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPassChanging(string value);
    partial void OnPassChanged();
    partial void OnUserOptionsChanging(string value);
    partial void OnUserOptionsChanged();
    #endregion
		
		public Users()
		{
			this._pageUsers = new EntitySet<PageUsers>(new Action<PageUsers>(this.attach_pageUsers), new Action<PageUsers>(this.detach_pageUsers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="admin", Storage="_adMiN", DbType="INT")]
		public System.Nullable<int> AdMIn
		{
			get
			{
				return this._adMiN;
			}
			set
			{
				if ((this._adMiN != value))
				{
					this.OnAdMInChanging(value);
					this.SendPropertyChanging();
					this._adMiN = value;
					this.SendPropertyChanged("AdMIn");
					this.OnAdMInChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="admin_options", Storage="_adMiNOptions", DbType="TEXT")]
		public string AdMInOptions
		{
			get
			{
				return this._adMiNOptions;
			}
			set
			{
				if ((this._adMiNOptions != value))
				{
					this.OnAdMInOptionsChanging(value);
					this.SendPropertyChanging();
					this._adMiNOptions = value;
					this.SendPropertyChanged("AdMInOptions");
					this.OnAdMInOptionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="description", Storage="_description", DbType="TEXT")]
		public string Description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="id", Storage="_id", AutoSync=AutoSync.OnInsert, DbType="INT", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="lastupd", Storage="_lastUpd", DbType="VARCHAR(20)")]
		public string LastUpd
		{
			get
			{
				return this._lastUpd;
			}
			set
			{
				if ((this._lastUpd != value))
				{
					this.OnLastUpdChanging(value);
					this.SendPropertyChanging();
					this._lastUpd = value;
					this.SendPropertyChanged("LastUpd");
					this.OnLastUpdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="name", Storage="_name", DbType="NVARCHAR(250)", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="pass", Storage="_pass", DbType="NVARCHAR(250)", CanBeNull=false)]
		public string Pass
		{
			get
			{
				return this._pass;
			}
			set
			{
				if ((this._pass != value))
				{
					this.OnPassChanging(value);
					this.SendPropertyChanging();
					this._pass = value;
					this.SendPropertyChanged("Pass");
					this.OnPassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="user_options", Storage="_userOptions", DbType="TEXT")]
		public string UserOptions
		{
			get
			{
				return this._userOptions;
			}
			set
			{
				if ((this._userOptions != value))
				{
					this.OnUserOptionsChanging(value);
					this.SendPropertyChanging();
					this._userOptions = value;
					this.SendPropertyChanged("UserOptions");
					this.OnUserOptionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Users_PageUsers", Storage="_pageUsers", ThisKey="ID", OtherKey="IDUser")]
		public EntitySet<PageUsers> PageUsers
		{
			get
			{
				return this._pageUsers;
			}
			set
			{
				this._pageUsers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_pageUsers(PageUsers entity)
		{
			this.SendPropertyChanging();
			entity.Users = this;
		}
		
		private void detach_pageUsers(PageUsers entity)
		{
			this.SendPropertyChanging();
			entity.Users = null;
		}
	}
}
#pragma warning restore 1591
